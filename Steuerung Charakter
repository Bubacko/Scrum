/// plattform physics

var rkey = keyboard_check(vk_right);
var lkey = keyboard_check(vk_left);
var jkey = keyboard_check(vk_up);

// Check for ground
if (place_meeting(x,y+1, obj_solid)) {
    vspd = 0;
    
    // jumping
    if (jkey) {
        vspd = -jspd;
    }   
} else {
    // Gravity
    if (vspd < 10) {
        vspd += grav;
    }
}

// Moving right
if (rkey) {
    hspd = spd;
}

// Moving left
if (lkey) {
    hspd = -spd;
    
    
    alkdfjaösdjföasdjf
}

// Check for not moving
if ((!rkey && !lkey) || (rkey && lkey)) {
    hspd = 0;
}

// Horizontal collisions
if (place_meeting(x+hspd, y, obj_solid)) {
    while (!place_meeting(x+sign(hspd), y, obj_solid)) {
        x+= sign(hspd);
    }
    hspd = 0;
}

// Move horizontally
x += hspd;

// Vertical collisions
if (place_meeting(x, y+vspd, obj_solid)) {
    while (!place_meeting(x,y+sign(vspd), obj_solid)) {
        y+= sign(vspd);
    }
    vspd = 0;
}

// Move vertically
y += vspd;

// Control the sprites
if (yprevious != y) { //moving vertically?
    sprite_index = spr_player_jump;
    image_speed = 0;
    image_index = y > yprevious; // wenn wahr (1), dann down, wenn falsch (0) dann up
} else {
    if (xprevious != x) { //moving horizontally?
        sprite_index = spr_player_walk;
        image_speed = .3;       
    } else{
        sprite_index = spr_player_stand;
    }
}

// Control direction player is facing
if (xprevious < x){ // moving to right
    image_xscale = 1;
} else if (xprevious > x){ // moving to left
    image_xscale = -1;
}
